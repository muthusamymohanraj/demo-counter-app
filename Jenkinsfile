pipeline {
    agent any 
    stages {
        stage ('git checkout') {
            steps {
                git url
            }
        }
        stage ('Maven build') {
            steps {
                sh 'mvn test'
            }
        }

        

        stage('sonar qube code analysis') {
            steps {
                script {
                    generate pipline for credentials pass
                    sh 'mvn clean package sonar:sonar'
                }

            }
        }
        stage (' Quality gate status'){
            steps{
                script{
                    #goto jenkins > click pipeline syntax > Withfor Quality gate > provide sonar credentials
                    #goto sonarqube administartion > configuration > webhook> (https://jenkinsurl/sonarqube-webhook)

                }
            }

        }
        stage('upload war file to nexus') {
            steps {
                script {
                    #paste pipeline syntax generated by jenkins to pass the credentials
                }
    
        }

        stage ('Build  docker image') {
            steps {
                script {

                    sh 'docker build -t $JOB_NAME-v1.$BUILD_ID .'
                    sh 'docker tag $JOB_NAME-v1.$BUILD_ID 9884453217/$JOBB_NAME-v1$BUILD_ID'
                    sh 'docker tag $JOB_NAME-v1.$BUILD_ID 9884453217/$JOBB_NAME-v1:latest'
                }
            }
        }

        stage {
            steps {
                #goto pipeline syntax and select with credentials :bind credentials to variables
                #select secret text
                #secret > dockerhub password
                #ID - dockerHub_passwd
                #description same as ID > generate syntax
                sh 'docker login -u 9884453217 -p ${dockerHub-passwd}'
                sh 'docker push 9884453217/$JOBB_NAME-v1$BUILD_ID'
                sh 'docker push 9884453217/$JOBB_NAME-v1:latest'
            }
        }

    }
}


pipeline {
    agent any 
        stages {
            stage ('git checkput') {
                steps {
                    git :https:url/repo
                }
            }
        }

        stage ('maven test') {
            steps {
                script {
                    sh 'mvn test'
                }
            }
        }

        stage('maven integration test') {
            steps {
                script {
                    sh 'mvn -DSkipUnitTests'
                }
            }
        }
        stage ('maven build') {
            steps {
                script {
                    sh 'mvn clean install'
                }
            }
        }

        stage ('sonar qube code check'){
            steps {
                script{
                    withSonarQubeEnv(credentialsId: 'sonar-cred') {
                        sh 'mvn clean package sonar:sonar'
                  }
                }
            }
        }   
    }
}
